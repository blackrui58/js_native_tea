正则: 操作字符串

字符串的方法: str
charAt(): 根据下标获取字符
indexOf(): 查找字符的下标,没有查找到-1
lastIndexOf(): 从右往左查
toLowerCase(): 全部小写
toUpperCase(): 全部大写
substring(a,b): 包头不包尾
substr(a,b)： 截取长度
split(): 根据字符分割为数组 

we are family: 切一刀-->遍历-->取第一个大写-->连接为字符串

'abc123 b5 c432 34245b lkma4'?
取出所有的数字?

正则的好处?
1.方便
2.性能特别高

正则: 正则表达式, 规则表达式  描述了一套规则

邮箱地址:
abc@abc.com
1234@qq.com
abc1232@163.com.cn

小红,语文特别好
一些字母或者数字@字母或者数字.com.cn  正则
xiaohong@aaaedu.com.cn

new Array() []  new Date()
{}
造正则?
new  RegExp(规则,选项);  regular expression 正则表达式

i: ignore  忽略大小写

字符串里面的方法: 
search(正则): 返回值是下标


简单写法: /规则/选项  (都不是字符串,直接写就行)

'abc123 b5 c432 34245b lkma4'
查找第一个数字的下标?

转义字符: \
\n: 换行

\d: digital 数字

match(正则): 返回结果是一个数组

选项:
i: 忽略大小写
g: global 全局

了解正则的特点?
1.蠢  (萌)
2.懒惰
3.贪婪

量词:
一只猪 一匹马 一棵树 两个人
若干盐: 至少一粒盐
+: 至少一个,多了不限

过滤敏感词:
replace(要替换的字符串(正则),替换内容);

replace(正则,function (s) {
	s代表查找到的元素
	return 返回值;
})

js: ||
正则: |

格式整理:

行首(开头): ^  代表字符串的开头
结尾: $ 代表结尾

选项: m  mutiple-line  多行  识别自动换行

选项可以写多个,顺序随意

第一行空两格

选项:
i: 忽略大小写
g: 全局查找
m: 多行

var reg = /a/img

规则一定要连起来写

或: | a|b|3  []
[ab3] == a|b|3   任意一个都满足
[0-9] == \d  所有的数字
[a-z] 所有的字母
[0-9a-z]: 所有的数字或者字母
[0123456789] == [0-9]
[1,2,3,5]   1  2  3  5  ,
^排除
[^0-9]: 排除数字
[^a-z]

量词: {} 只能给一个设置量词
\d\d: 两个数字
\d{10}: 10个数字
{1,10}: 1-10个
{1,}: 至少一个  +
{0,1}: 0-1个  可有可无   ?
{0,}: 0-无穷大 任意值  .

/abc[0-4]{1,4}/: ab1111  1234  123 12345 
/a/d+/: 若干个数字 

/abcd/:   abcd
(): 代表一组

/a(bc)+d/: abcbcbcd

.com.cn: /\.com/: 1com

转义:
\d: 数字
\w: 数字字母_  [0-9a-z_]
\s: 空格

\D: 非数字  [^0-9]
\W: 除了数字字母下划线  [^0-9a-z_]
\S: 非空格 [^\s]

首字母大写:
1.split-->arr[0].charAt(0).toU/.....-->arr.join(' ')
2.正则

做表单注册:
写正则: 拆
检索座机号?
010-8812345
0123-88123456
8812345
88123456


区号: (0[1-9]\d{1,2}-)?

号码: [1-9]\d{6,7}

座机号: ^(0[1-9]\d{1,2}-)?[1-9]\d{6,7}$

正则的方法:
reg.test(测试的字符串): 返回值是ture或者是false

一般配合开头(^)和结尾($)使用

检索邮箱:
@前面可以有字母数字下划线
@后面都不能有下划线,数字或者字母
21312321@qq.com
abc@163.com
hwqeqewyh@aaaedu.cc
a@sad.com.cc
abc@wqeq.org
abc_abc@abc.abc
a@163.abc

毕加索:

^\w+@[0-9a-z]+  (\.[a-z]{2,6}){1,2}$

请实现一个trim?  去除首尾空格

\u:  Unicode编码  把0x替换
---------------------------------------------------------------------
数据的交互:  前后端通信
数据从服务器(后台,后端)获取

服务器: 电脑 服务器的环境

把文件放到服务器里面,别人就能看你的文件

安装服务器环境: wamp-->绿色,说明服务器正在运行-->网址里面输入localhost(ip地址)
本机地址: 127.0.0.1

ip地址: window+R-->cmd-->ipconfig

服务器的种类:
web服务器: 提供网站服务器,供前后端交互
	Apache服务器
数据库服务器: 提供数据库服务
	MySQL
域名服务器: 提供域名服务 (把域名-->ip)

wamp: 集成软件: Apache+mysql+php

localhost: 访问服务器

本地环境: File
服务器环境: localhost

D:/ wamp64

服务器配置路径:
D:\wamp64\bin\apache\apache2.4.18\conf\httpd.conf

访问localhost的时候,其实访问的www文件夹下的内容


可以在手机获取其他电脑查看服务器里面的文件,必须在同一局域网下面:
1.开启wifi
2.查看自己的无线ip
3.在手机浏览器输入该ip地址

192.168.191.1/test.html

需要改服务器的访问配置:
D:\wamp64\bin\apache\apache2.4.18\conf\extra\httpd-vhosts.conf
Require local: 只能在本地访问
Require all granted: 所有设备都能访问

服务器里面的路径最好不要出现中文

cookie: 缓存的一种,也叫做http cookie,用来作为服务器与客户端进行通信,参与通信,不需要我们管;

一般用来做本地存储,存储空间小,4kb,空间非常珍贵,别瞎存;存进去的信息都是字符串

cookie:
1.大小4kb
2.不安全(针对于登录注册来说)
3.必须是服务器环境
4.有过期时间
5.cookie是可以共享的

存取cookie

key: value
看cookie:
f12-->application-->左下角

默认过期时间为: session
会话: 浏览器不关闭,就是会话状态

设置cookie:
document.cookie = 'key=value;path=/;expires=时间对象;';
/: 根目录

取:
document.cookie

子文件夹里面的文件可以访问父级的cookie;父级的不能访问子级的

只需把过期时间改为以前的时间

cookie: 本地存储,4K,参与通信,一定要在服务器环境下查看,自己设置过期时间

h5: 支持IE8+
本地存储: 大小为5M,不参与通信,不需要再服务器环境下查看
window.localStorage: 永远存在,除非自己删除

window.sessionStorage: 暂时性,窗口关闭,就没了