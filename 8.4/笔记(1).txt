if ..else if..else

三目运算符:
条件?条件成立执行的代码 : 条件不成立执行的代码

switch: 条件为等于的情况
case :  break;

break: 跳出整个循环
continue: 跳出某次循环

onfoucs: 获取光标的事件
onblur: 失去光标的事件

onmousedown: 鼠标摁下
onmouseup: 鼠标抬起

true false控制checkbox的选中状态

document.getElementsByTagName('div')
父元素.getElementsByTagName('div');

函数: 实现某种功能
1.封装: 将重复的代码包装到一个函数里面
2.重用: 函数是可以重复使用的

定义函数:
var a,var b
function 函数名 (形参1,形参2,形参3) { 变量声明
	函数体	
}
调用函数: 函数名(实参1,实参2,实参3)


返回值: 调用函数的时候,会给你返回一个值  函数名()代表一个值

函数名() :
1.调用函数
2.代表返回值 (就是一个数值)

有关于return:
1.如果函数里面没有return,则返回值是undefined,如果return后面有值,则该函数的返回值就是return 后面的值
2.函数里面碰到return,函数结束运行,代码不继续往下走

函数的第二种写法:
var 函数名 = function () {}
show()

function () {} : 匿名函数

;(function () {
	var a = 10;
})() : 匿名函数的自执行 ---> 封闭空间

封闭空间的作用:
1.解决变量冲突问题
2.解决i值问题 (在循环里面添加事件的i值问题)

变量的作用域:
全局变量
局部变量: 只能在一个函数里面使用

函数的作用域:
全局函数: 所有的地方都能使用的函数
局部函数: 只在定义该函数的区域使用此函数

子函数可以使用父函数的变量
父函数不能使用子函数的变量

面试题:
add(4)(5)(6) : 结果是15
add(7)(8)(9) : 结果是24
